<?php

/**
 * Setup variables
 *
 */
$strDataFolder = "./data";  // No ending '/' Data folder for files created by scripts
$strInFolder = "" . $strDataFolder . "/watchfolder";  // Folder this script is watching for file additions
$strOutFolder = "" . $strDataFolder . "/output";  // Set output folder for output files
$strBackupFolder = "" . $strDataFolder . "/archive";  // Move the original files to this folder after processing
$arrayInputFileExtensions = array('xml');  // Filename extensions to be monitored for in the watch folder
$sleep = 3;  // Set time to wait before checking input folder for new files (in seconds)
$db = "" . $strDataFolder . "/db/db.sqlite";  // Set the database location and name
$db_table = 'incidents';  // Set the database table name to store incidents into
$TimeAdjust = 900;  // 15 minutes x 60 seconds Incidents older than this time will never be sent

/**
 * Composer autoload and php 
 *
 */
ini_set('memory_limit', '-1');
ini_set("max_execution_time", 0);
set_time_limit(0);
require_once "./vendor/autoload.php";
require_once "./config.php";

/**
 * Load Monolog and Initialize
 *
 */
use Monolog\Level;
use Monolog\Logger;
use Monolog\Handler\StreamHandler;
use Monolog\Processor\IntrospectionProcessor;

$logger = new Logger("nws-endpoint");
$logger->pushProcessor(new IntrospectionProcessor());
$stream_handler = new StreamHandler("php://stdout", Level::Warning); //Debug|Info|Notice|Warning|Error|Critical|Alert|Emergency

$logger->pushHandler($stream_handler);
$logger->info('nws-endpoint logger is now ready'); // You can now use your logger

/**
 * Include config.php file
 * */

if (!file_exists('./config.php')) {
    rename("./config.php.dist", "./config.php");
    $logger->warning("config.php file was not located so I created one for you.  Please be sure to change the settings");
    die("config.php file was not located so I created one for you.  Please be sure to change the settings");
}

/**
 * Include all functions in the src/functions folder
 */
foreach (glob('./functions/*.php') as $filename) {
    include_once $filename;
    $logger->info("include_once $filename \r\n");
}

/**
 * Setup file structure
 */

if (!is_dir($strInFolder)) {  // Watchfolder
    mkdir($strInFolder);
    $logger->info("Watch folder not found - So I created one for you at $strInFolder");
} else {
    $logger->info("Watch folder found at $strInFolder");
}

if (!is_dir($strOutFolder)) {  // OutFolder
    mkdir($strOutFolder);
    $logger->info("Output folder not found - So I created one for you at $strOutFolder");
} else {
    $logger->info("Output folder found at $strOutFolder");
}
if (!is_dir($strBackupFolder)) {  // ArchiveFolder
    mkdir($strBackupFolder);
    $logger->info("Backup folder not found - So I created one for you at $strBackupFolder");
} else {
    $logger->info("Backup folder found at $strBackupFolder");
}

/**
 * Cleanup the watch folder.....
 */
fcn_1_unlinkInputOld($strInFolder, $TimeAdjust, $logger);

/**
 * Start monitoring folders
 */
while (true) {
    fcn_2_monitorFolder($strInFolder, $arrayInputFileExtensions, $strOutFolder, $strBackupFolder, $logger, $db, $db_table);

    // All the remaining functions are called from here

    sleep($sleep); //Waiting for XXX seconds
}
